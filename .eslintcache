[{"/Users/eleme/Documents/projects/kaizen-web/src/reportWebVitals.js":"1","/Users/eleme/Documents/projects/kaizen-web/src/App.js":"2","/Users/eleme/Documents/projects/kaizen-web/src/index.js":"3","/Users/eleme/Documents/projects/kaizen-web/src/indexed-db.js":"4"},{"size":362,"mtime":1608809306032,"results":"5","hashOfConfig":"6"},{"size":4094,"mtime":1608881753212,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1608809306031,"results":"8","hashOfConfig":"6"},{"size":3653,"mtime":1608880054772,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h327l",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/eleme/Documents/projects/kaizen-web/src/reportWebVitals.js",[],"/Users/eleme/Documents/projects/kaizen-web/src/App.js",[],"/Users/eleme/Documents/projects/kaizen-web/src/index.js",[],"/Users/eleme/Documents/projects/kaizen-web/src/indexed-db.js",["19","20"],"var db = null;\n\nexport default {\n  indexedDB: window.indexedDB || window.webkitindexedDB || window.msIndexedDB || window.mozIndexedDB,\n\n  openDB(dbname, objectStoreName, version, onSuccess) {\n    var version = version || 1\n\n    var request = this.indexedDB.open(dbname, version)\n\n    request.onerror = function(event) {\n        console.log('IndexedDB数据库打开错误')\n    }\n\n    request.onsuccess = function(event, callback) {\n        db = event.target.result;\n        if (callback && (typeof callback === 'function')) {\n            callback(db)\n        }\n        if (db != null) {\n            console.log('数据库打开成功')\n        }\n    }\n\n    request.onupgradeneeded = function(event) {\n        console.log('数据库版本变化')\n        console.log('创建数据库' + dbname)\n        db = event.target.result;\n\n        if (!db.objectStoreNames.contains(objectStoreName)) {\n            // 创建对象仓库，并设置主键自增\n            var objectStore = db.createObjectStore(objectStoreName, {\n                keyPath: 'id',\n                autoIncrement: true\n            })\n\n            // 创建索引（根据需要创建）\n            objectStore.createIndex('createAt', 'createAt', {\n                unique: true\n            })\n            objectStore.createIndex('category', 'category', {\n                unique: false\n            })\n        }\n    }\n\n    return request;\n  },\n\n  add(objectStoreName, argument) {\n    if (db != null) {\n        console.log(db, argument)\n\n        // 执行事务，添加数据到对象仓库（表）\n        var request = db.transaction([objectStoreName], 'readwrite')\n            .objectStore(objectStoreName)\n            .add(argument);\n\n        request.onsuccess = function(event) {\n            console.log('数据写入成功');\n        };\n\n        request.onerror = function(event) {\n            console.log('数据写入失败');\n        }\n    }\n  },\n  foreach: function(objectStoreName) {\n    if (db != null){\n        console.log(db)\n\n        // 执行事务，从对象仓库（表）中获取所有数据\n        var request = db.transaction([objectStoreName], 'readwrite')\n            .objectStore(objectStoreName).openCursor()\n\n        // 数据获取失败\n        request.onerror = function(event) {\n            console.log('事务失败')\n        }\n\n        //数据获取成功\n        request.onsuccess = function(event) {\n            let cursor = request.result\n            if (cursor) {\n                // 遍历打印所有数据\n                console.log(cursor)\n                console.log(cursor.key)\n                console.log(cursor.value)\n                cursor.continue()\n            } else {\n                console.log('未获得数据记录')\n            }\n        };\n    }\n  },\n\n  searchAll: function(objectStoreName, callback/*, index, data*/) {\n    if (db != null){\n        console.log(db)\n\n        // 执行事务，从对象仓库（表）中获取所有数据\n        var request = db.transaction([objectStoreName], 'readonly')\n            .objectStore(objectStoreName).getAll()//.index(index).getAll(data)\n\n        // 数据获取失败\n        request.onerror = function(event) {\n            console.log('事务失败')\n        }\n\n        //数据获取成功\n        request.onsuccess = function(event) {\n            if (request.result) {\n                // 遍历打印所有数据\n                console.log(request.result)\n                console.log(\"callback, result:\", request.result)\n                callback(request.result);\n            } else {\n                console.log('未获得数据记录')\n            }\n        };\n    }\n  }\n\n\n}",{"ruleId":"21","severity":1,"message":"22","line":3,"column":1,"nodeType":"23","endLine":125,"endColumn":2},{"ruleId":"24","severity":1,"message":"25","line":7,"column":9,"nodeType":"26","messageId":"27","endLine":7,"endColumn":16},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-redeclare","'version' is already defined.","Identifier","redeclared"]