{"version":3,"sources":["indexed-db.js","App.js","reportWebVitals.js","index.js"],"names":["db","indexedDB","window","webkitindexedDB","msIndexedDB","mozIndexedDB","openDB","dbname","objectStoreName","version","onSuccess","request","this","open","onerror","event","console","log","onsuccess","callback","target","result","onupgradeneeded","objectStoreNames","contains","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","add","argument","transaction","foreach","openCursor","cursor","key","value","continue","searchAll","getAll","storage","IndexedDB","setTimeout","item","name","sessionStorage","getItem","setItem","App","props","state","input","inputList","activeCate","categoryList","showList","loading","handleChange","bind","handleClick","handleFilter","listen","sort","a","b","createAt","Array","from","Set","map","d","isArray","category","length","setState","document","addEventListener","e","ctrlKey","keyCode","toggleShowList","dataset","cate","splits","split","content","processInput","Date","getTime","count","noteList","filter","className","join","manba","Number","format","getTag","text","isActive","data-cate","onClick","cateList","placeholder","onChange","class","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.936c62ee.chunk.js","sourcesContent":["var db = null;\n\nexport default {\n  indexedDB: window.indexedDB || window.webkitindexedDB || window.msIndexedDB || window.mozIndexedDB,\n\n  openDB(dbname, objectStoreName, version, onSuccess) {\n    var version = version || 1\n\n    var request = this.indexedDB.open(dbname, version)\n\n    request.onerror = function(event) {\n        console.log('IndexedDB数据库打开错误')\n    }\n\n    request.onsuccess = function(event, callback) {\n        db = event.target.result;\n        if (callback && (typeof callback === 'function')) {\n            callback(db)\n        }\n        if (db != null) {\n            console.log('数据库打开成功')\n        }\n    }\n\n    request.onupgradeneeded = function(event) {\n        console.log('数据库版本变化')\n        console.log('创建数据库' + dbname)\n        db = event.target.result;\n\n        if (!db.objectStoreNames.contains(objectStoreName)) {\n            // 创建对象仓库，并设置主键自增\n            var objectStore = db.createObjectStore(objectStoreName, {\n                keyPath: 'id',\n                autoIncrement: true\n            })\n\n            // 创建索引（根据需要创建）\n            objectStore.createIndex('createAt', 'createAt', {\n                unique: true\n            })\n            objectStore.createIndex('category', 'category', {\n                unique: false\n            })\n        }\n    }\n\n    return request;\n  },\n\n  add(objectStoreName, argument) {\n    if (db != null) {\n        console.log(db, argument)\n\n        // 执行事务，添加数据到对象仓库（表）\n        var request = db.transaction([objectStoreName], 'readwrite')\n            .objectStore(objectStoreName)\n            .add(argument);\n\n        request.onsuccess = function(event) {\n            console.log('数据写入成功');\n        };\n\n        request.onerror = function(event) {\n            console.log('数据写入失败');\n        }\n    }\n  },\n  foreach: function(objectStoreName) {\n    if (db != null){\n        console.log(db)\n\n        // 执行事务，从对象仓库（表）中获取所有数据\n        var request = db.transaction([objectStoreName], 'readwrite')\n            .objectStore(objectStoreName).openCursor()\n\n        // 数据获取失败\n        request.onerror = function(event) {\n            console.log('事务失败')\n        }\n\n        //数据获取成功\n        request.onsuccess = function(event) {\n            let cursor = request.result\n            if (cursor) {\n                // 遍历打印所有数据\n                console.log(cursor)\n                console.log(cursor.key)\n                console.log(cursor.value)\n                cursor.continue()\n            } else {\n                console.log('未获得数据记录')\n            }\n        };\n    }\n  },\n\n  searchAll: function(objectStoreName, callback/*, index, data*/) {\n    if (db != null){\n        console.log(db)\n\n        // 执行事务，从对象仓库（表）中获取所有数据\n        var request = db.transaction([objectStoreName], 'readonly')\n            .objectStore(objectStoreName).getAll()//.index(index).getAll(data)\n\n        // 数据获取失败\n        request.onerror = function(event) {\n            console.log('事务失败')\n        }\n\n        //数据获取成功\n        request.onsuccess = function(event) {\n            if (request.result) {\n                // 遍历打印所有数据\n                console.log(request.result)\n                console.log(\"callback, result:\", request.result)\n                callback(request.result);\n            } else {\n                console.log('未获得数据记录')\n            }\n        };\n    }\n  }\n\n\n}","import './App.css';\nimport React from 'react';\nimport IndexedDB from './indexed-db.js';\nimport manba from 'manba';\n\nfunction processInput(input)  {\n  const splits = input.split(' ');\n  let content = input, category = [];\n\n  if(splits.length > 1 && splits[0].length < 15) {\n    category = splits[0].split('/');\n    content = splits[1];\n  }\n  return { category, content }\n}\n\nconst storage = {\n  getInputList: function(callback) {\n    IndexedDB.openDB('kaizen', 'notes', 1);\n    setTimeout(() => {\n      IndexedDB.searchAll('notes', result => {\n        callback(result)\n      })\n    }, 2000)\n  },\n  addInputItem: function(item) {\n    IndexedDB.add('notes', item)\n  },\n  getSetting(name) {\n    return sessionStorage.getItem('note_' + name);\n  },\n  setSetting(name, value) {\n    return sessionStorage.setItem('note_' + name, value);\n  }\n}\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      input: '',\n      inputList: [],\n      activeCate: null,\n      categoryList: [],\n      showList: !!(storage.getSetting('showList')),\n      loading: true\n    }\n\n    console.log(this.state.inputList)\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.listen();\n\n    storage.getInputList((inputList) => {\n      inputList.sort((a,b) => b.createAt - a.createAt );\n\n      let categoryList =\n        Array.from(new Set(\n          inputList.map(d => {\n            return (Array.isArray(d.category) && d.category.length) ? d.category[0] : null\n          })\n        ));\n\n      this.setState({\n        loading: false,\n        inputList,\n        categoryList\n      })\n    })\n  }\n\n  listen() {\n    document.addEventListener('keydown', (e) => {\n      if (e.ctrlKey  && e.keyCode === 72) {\n        this.toggleShowList()\n      }\n    })\n  }\n\n  toggleShowList() {\n    this.setState({ showList: !this.state.showList });\n    storage.setSetting('showList', this.state.showList ?  '1' : '');\n  }\n\n  handleChange(e) {\n    this.setState({\n      input: e.target.value\n    })\n  }\n  handleFilter(e) {\n    const category = e.target.dataset.cate;\n\n    this.setState({activeCate: category});\n  }\n\n  handleClick(e) {\n    const input = this.state.input;\n    const { content, category } = processInput(input);\n    const item ={ createAt:(new Date()).getTime(), content, category  };\n\n    this.setState({\n      input: '',\n      inputList: [item, ...this.state.inputList]\n    })\n\n    storage.addInputItem(item);\n  }\n  render () {\n    const handleFilter = this.handleFilter\n    const count = this.state.inputList.length;\n    const activeCate = this.state.activeCate;\n    const list = this.state.activeCate ? this.state.inputList.filter(d => Array.isArray(d.category) && d.category[0] === this.state.activeCate) : this.state.inputList;\n\n    const noteList = list.map(d => {\n      return (\n        <div className=\"note-item\">\n          <p className=\"desc\">{d.category && d.category.join('/')}&nbsp;<span className=\"create-date\">创建于{manba(Number(d.createAt)).format('k')}</span></p>\n          <p>{d.content}</p>\n        </div>\n      )\n    });\n\n\n    const getTag = function (text) {\n      const isActive = (activeCate && activeCate === text) || (!activeCate && !text);\n      return <span data-cate={text} className={isActive ? 'active' : '' } onClick={handleFilter}>{text || '全部(' + count + ')'}</span>\n    }\n    const cateList = [getTag(), ...this.state.categoryList.map(d => {\n      return d ? getTag(d) : ''\n    })];\n\n    return (\n      <div className=\"app\">\n        <div className=\"page\">\n          <input className=\"editorInput\" value={this.state.input} placeholder=\"请输入内容\" onChange={this.handleChange} />\n          <button onClick={this.handleClick}>完成</button>\n          <div class=\"loading-banner\">{ this.state.loading ? '加载中...' : ''}</div>\n          <div className=\"category-list\">{ this.state.showList ? cateList : '' }</div>\n          { this.state.showList ? noteList : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}